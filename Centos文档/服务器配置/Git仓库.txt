centos服务器下搭建git仓库，使用ssh协议管理仓库代码权限    git官网（http://git-scm.com/）


我是从这里下载的
https://www.kernel.org/pub/software/scm/git/




使用ssh协议：

一、安装git，使用yum install git 或者使用 源码包安装git-2.2.0.tar.gz（https://www.kernel.org/pub/software/scm/git/）



安装必须的软件 
># yum -y install gcc openssl openssl-devel curl curl-devel unzip perl perl-devel expat expat-devel zlib zlib-devel asciidoc xmlto gettext-devel openssh-clients  


下载解压软件，安装


># tar -zxvf libiconv-1.14.tar.gz 
># cd libiconv-1.14
># ./configure --prefix=/usr/local/git
># make && make install


建立软链接

ln -s /usr/local/git/bin/git  /usr/bin/git
ln -s /usr/local/git/bin/git-upload-pack /usr/bin/git-upload-pack  








#新建git用户与用户组
groupadd git	
useradd -g git git
passwd git


#最好让git可以密钥登录




#付给已有用户增加工作组
usermod -G groupname username

二，新建git仓库(仓库位置自己随用户自己决定，例/var/git/testproject.git)

　　1，在/var/git目录下新建 项目名称testproject.git 文件夹

　　2，# cd /var/git/testproject.git 进入文件夹，

　　　  # git init --bare 创建裸库（这里需要注意--bare参数，表示是要生成一个"干净"的仓库）

　　3，修改权限

　　　　# chown -R git testproject.git
　　　　# chgrp -R git testproject.git
　　　　# chmod -R 775 testproject.git
　　　　# chmod g+s -R testproject.gitcd

	git通过setgid bit更改这个目录属性（chmod g+s），作用在目录上的setgid可让在该目录下创建的文件继承该目录的组属性


	775（允许本用户和与本用户处在同一个组的用户修改）
	755（只允许自己修改）



	Step 5: 防止登录shell
-
出于安全考虑，git用户不应该登录shell，可以编辑/etc/passwd，找到类似一行：

git:x:1001:1001:,,,:/home/git:/bin/bash

改为：

git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell

这样，git用户可以正常通过ssh使用git，但无法登录shell。


三 新建项目文件夹，改所有者为git






三，配置ssh公钥（无需密码更新代码库）

四，使用仓库

　　1，在获得授权的电脑上，打开git bash，

　　　　# git clone git@serverip:/var/git/testproject.git 　　　　即可下拉代码且无需密码

	git@192.168.213.23:/var/git
ssh://git@192.168.213.23:/var/git/a

	chmod g+w objects/  

	git通过setgid bit更改这个目录属性（chmod g+s），作用在目录上的setgid可让在该目录下创建的文件继承该目录的组属性


















虽然git是分布式的版本管理系统，但对于团队项目开发，通常还是会在单独的服务器上创建一个git server。类似于svn，git server也有好几种配置方式。详情，可以参见git的文档 http://git-scm.com/book/en/v2 。这里，主要是从上述文档中摘出一部分，说明一下git-shell的用处。

假如，大家都使用ssh的方式来访问：

$ git clone git@10.3.0.99:project.git

这就意味者，访问者具有权限可以ssh登陆到服务器上:

$ ssh git@10.3.0.99

出于安全的考虑，我们最好限制用户只能进行git push/pull，但无法登陆。这可以使用git-shell来完成。

查看一下git-shell的位置：

$ which git-shell
/usr/bin/git-shell

将git-shell的路径添加到 /etc/shells 文件中，然后修改git用户的shell：

$ sudo chsh git

设置为/usr/bin/git-shell。这样，如果再使用ssh方式登陆，则会报错：

$ ssh git@10.3.0.99
git@10.3.0.99's password: 
Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-35-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

fatal: Interactive git shell is not enabled.
hint: ~/git-shell-commands should exist and have read and execute access.
Connection to 10.3.0.99 closed.








#git 添加远程地址

git remote add bare git@192.168.101.11:12768/var/git/831_suyuan_upload



git@192.168.1.253:10001/var/git/831_suyuan

git clone ssh://git@192.168.1.253:10001/var/git/831_suyuan


参考文章：http://www.dbpoo.com/centos-65-git-update/



#git 权限不同引起的冲突
$ git config core.filemode false

#让git区分大小写文件名
git config core.ignorecase false


git clone ssh://git@123.150.143.153:10001/var/git/831_suyuan /usr/local/nginx/html/831_suyuan

git clone ssh://git@123.150.143.153:10001/var/git/831_suyuan_images /usr/local/nginx/html/831_suyuan/public/upload



git clone ssh://git@192.168.1.253:10001/var/git/831_suyuan /usr/local/nginx/html/731_suyuan_sunyilinedit

git clone ssh://git@123.150.143.153:10001/var/git/831_suyuan_images /usr/local/nginx/html/731_suyuan_sunyilinedit/public/upload






git标签常用操作
#==================================================================================

    命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；

    git tag -a <tagname> -m "blablabla..."可以指定标签信息；

    git tag -s <tagname> -m "blablabla..."可以用PGP签名标签；

    命令git tag可以查看所有标签。

    命令git push origin <tagname>可以推送一个本地标签；

    命令git push origin --tags可以推送全部未推送过的本地标签；

    命令git tag -d <tagname>可以删除一个本地标签；
    命令git push origin :refs/tags/<tagname>可以删除一个远程标签。
