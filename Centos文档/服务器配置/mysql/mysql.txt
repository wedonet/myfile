 CentOS 7 源码编译安装MySQL 5.7.14


准备工作


查看是否安装了mysql
rpm -qa | grep -i mysql 



安装perl
yum install -y perl-Module-Install.noarch



安装新版mysql之前，我们需要将系统自带的mariadb-lib卸载

[root@5201351 ~]# rpm -qa|grep mariadb
mariadb-libs-5.5.41-2.el7_0.x86_64
[root@5201351 ~]# rpm -e mariadb-libs-5.5.41-2.el7_0.x86_64 --nodeps


yum remove mysql-libs



安装时候会提示与已经安装的RPM包有冲突，卸载一些RPM包，执行命令：rpm -qa|grep mariadb查看要卸载软件



.既然知道了是哪些RPM包，就开始卸载吧！执行命令：

复制代码
代码如下:

rpm -e --nodeps mariadb-libs-5.5.41-2.el7_0.x86_64
rpm -e --nodeps mariadb-server-5.5.41-2.el7_0.x86_64
rpm -e --nodeps mariadb-5.5.41-2.el7_0.x86_64






一、添加用户和组

1. 进入root:

su

2. 添加组：

groupadd mysql

3. 添加用户：

useradd -r -g mysql -s /bin/false mysql

二、安装

1. 首先到MySQL官网下载最新版的MySQL 5.7.14，进入http://dev.mysql.com/downloads/mysql/，选择Source Code下的Generic Linux。

2. 解压

放到/usr/src/mysql

tar -xvf mysql-5*****.tar

3. 安装MySQL所需要的工具：

(1) CMake，一个跨平台的安装（编译）工具；

(2) gcc-c++， C++编译器；

(3) Boost库，C++语言标准库的扩展库(这里很可能会出现坑)；

(4) perl，一种编程序言；

(5) bison， 一个语法分析器生成器；

(6) git，版本控制工具；

(7) curses，图形函数库。

yum install cmake gcc-c++ perl-Data-Dumper bison git ncurses-devel

4. 进入解压完的mysql目录ls


y

其中最简单的安装mysql-server服务，只需要安装如下4个软件包即可，我们可以使用rpm -ivh命令进行安装


rpm -ivhy


mysql-community-common-5.7.9-1.el7.x86_64.rpm
mysql-community-libs-5.7.9-1.el7.x86_64.rpm --（依赖于common）
mysql-community-client-5.7.9-1.el7.x86_64.rpm --（依赖于libs）
mysql-community-server-5.7.9-1.el7.x86_64.rpm --（依赖于client、common）




安装完应该先检查一下/var/lib/mysql目录下的文件权限，执行

chown mysql:mysql -R /var/lib/mysql




初始化mysql
mysqld --initialize                         //新版的推荐此方法，执行生会在/var/log/mysqld.log生成随机密码
MySQL 5.7 在初始安装后（CentOS7 操作系统）会生成随机初始密码，并在 /var/log/mysqld.log 中有记录，可以通过 more 命令查看，找 password 关键字


chown mysql:mysql -R /var/lib/mysql


grep 'temporary password' /var/log/mysqld.log 



启动mysql


systemctl 







使用mysqld --initialize命令前，不要自己创建data目录，否则无法正常生成全部data目录文件，会出现如下错误提示：

D:\mysql\mysql-5.7.14-winx64\bin>mysqld --initialize

2016-08-25T02:26:39.100728Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2016-08-25T02:26:39.100728Z 0 [ERROR] --initialize specified but the data directory has files in it. Aborting.

2016-08-25T02:26:39.110728Z 0 [ERROR] Aborting

遇到这个问题，就直接删掉自己创建的data目录，然后再执行mysqld --i snitialize命令即可。









7、根据第5步中的密码登录到mysql，更改root用户的密码，新版的mysql在第一次登录后更改密码前是不能执行任何命令的

[root@5201351 ~]# mysql -uroot -p')j#)=uRig4yJ'
mysql> set password=password('Abc_123456');

8、最后我们还可以根据实际情况创建用户，及作权限分配

mysql> create user 'root'@'192.168.101.13' identified by 'Abc_123456'; 
mysql> GRANT ALL PRIVILEGES ON *.* to 'root'@'%';
mysql> flush privileges


create user 'wedonet'@'172.16.32.%' identified by 'Zh_123456';
GRANT ALL PRIVILEGES ON *.* to 'wedonet'@'172.16.32.%';
flush privileges


==============================================

最后需要特别提醒注意的一点是，新版的mysql数据库下的user表中已经没有Password字段了，

而是将加密后的用户密码存储于authentication_string字段

 



 


mysql常用指令

service mysqld start
service mysqld stop
service mysqld restart












如果想要其他主机连接你的Mysql就需要开放3306端口。

[root@localhost 桌面]# firewall-cmd --zone=public --add-port=3306/tcp --permanent
[root@localhost 桌面]# firewall-cmd --reload



允许远程登录
GRANT all privileges on *.* TO 'root'@'%' identified by 'Abc_123456' WITH GRANT OPTION;    
FLUSH PRIVILEGES; 














8. 创建data目录：

mkdir -m 777 data

9. 创建MySQL配置文件并进行配置：

cp support-files/my-default.cnf /etc/my.cnf
gedit /etc/my.cnf

进入编辑器之后修改以下几行(注意去掉#号)：

basedir = /usr/local/mysql
datadir = /usr/local/mysql/data
port = 3306

10. 权限设置：

chown -R mysql .
chgrp -R mysql .

11. 初始化数据库：

bin/mysqld --initialize --user=mysql

执行完这一句后mysql会分配一个初始的密码，这个密码得备份下来。

继续执行：

bin/mysql_ssl_rsa_setup
chown -R root .
chown -R mysql data

12. 启动MySQL：

bin/mysqld_safe --user=mysql &

 13. 登录mysql：

bin/mysql -u root -p

14. 修改密码：

ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';

15. 远程登录权限：

GRANT ALL PRIVILEGES ON *.* TO root@'%' IDENTIFIED BY 'passwd2015';
FLUSH PRIVILEGES;


#创建用户
create user repl identified by 'Abc_123456';





#mysql 常用操作

查看所有用户
select user,host,Create_user_priv,Super_priv from mysql.user


主从复制

1. 创建用户repl,给权限






#显示数据库
SHOW DATABASES;


#数据路径

查看数据库路径
mysql> show global variables like "%datadir%"; 


/var/lib/mysql






#删除数据库

drop database 名称



1.新建用户

　　1.1 登录MYSQL：

　　@>mysql -u root -p

　　@>密码

　　1.2 创建用户：

　　mysql> insert into mysql.user(Host,User,Password) values("localhost","test",password("1234"));

　　这样就创建了一个名为：test 密码为：1234 的用户。

　　注意：此处的"localhost"，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将"localhost"改为"%"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。

　　1.3 然后登录一下：

　　mysql>exit;

　　@>mysql -u test -p

　　@>输入密码

　　mysql>登录成功

 

2.为用户授权

　　授权格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by "密码";　

　　2.1 登录MYSQL（有ROOT权限），这里以ROOT身份登录：

　　@>mysql -u root -p

　　@>密码

　　2.2 首先为用户创建一个数据库(testDB)：

　　mysql>create database testDB;

　　2.3 授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：

　　 mysql>grant all privileges on testDB.* to test@localhost identified by '1234';

 　　mysql>flush privileges;//刷新系统权限表

　　格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by "密码";　

　　2.4 如果想指定部分权限给一用户，可以这样来写:

　　mysql>grant select,update on testDB.* to test@localhost identified by '1234';

　　mysql>flush privileges; //刷新系统权限表

　　2.5 授权test用户拥有所有数据库的某些权限： 　 

　　mysql>grant select,delete,update,create,drop on *.* to test@"%" identified by "1234";

     //test用户对所有数据库都有select,delete,update,create,drop 权限。

　 //@"%" 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）

　//对localhost授权：加上一句grant all privileges on testDB.* to test@localhost identified by '1234';即可。

 

3. 删除用户

 　　@>mysql -u root -p

　　@>密码

 　　mysql>Delete FROM user Where User='test' and Host='localhost';

 　　mysql>flush privileges;

 　　mysql>drop database testDB; //删除用户的数据库

删除账户及权限：>drop user 用户名@'%';

　　　　　　　　>drop user 用户名@ localhost; 

 

4. 修改指定用户密码

  　　@>mysql -u root -p

  　　@>密码

  　　mysql>update mysql.user set authentication_string=password('新密码') where User="test" and Host="localhost";

  　　mysql>flush privileges;

 

5. 列出所有数据库

　　mysql>show database;

 

6. 切换数据库

　　mysql>use '数据库名';

 

7. 列出所有表

　　mysql>show tables;

 

8. 显示数据表结构

　　mysql>describe 表名;

 

9. 删除数据库和数据表

　　mysql>drop database 数据库名;

　　mysql>drop table 数据表名;


#登录远程Mysql
mysql -h ip -u root -p -P 3306例如：mysql -h 127.0.0.1 -u root -p -P 3306







配置mysql主从时，由于是拷贝的mysql目录，导致主从mysql uuid相同， Slave_IO无法启动，报错信息如下：

    The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.

    解决办法:修改mysql data 目录下auto.cnf 文件中uuid的值，使两台mysql不同即可，修改后重启mysql服务。





二、导入数据库
1、首先建空数据库
mysql>create database abc;

2、导入数据库
方法一：
（1）选择数据库
mysql>use abc;
（2）设置数据库编码
mysql>set names utf8;
（3）导入数据（注意sql文件的路径）
mysql>source /home/abc/abc.sql;
方法二：
mysql -u用户名 -p密码 数据库名 < 数据库名.sql
#mysql -uabc_f -p abc < abc.sql